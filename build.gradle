plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.exam'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}

	tasks.withType(JavaCompile) {
        options.compilerArgs += ['-parameters']
    }


}


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' //Definimos que usamos JPA para usar las clases en la db
	implementation 'org.springframework.boot:spring-boot-starter-web' //Definimos el modulo web para Spring Boot
	runtimeOnly 'com.mysql:mysql-connector-j' //Modulo para la conexcion a la base de datos en Mysql
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'  // Para Jakarta EE 9+
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2' //Modulo usar la documentaci√≥n de Open Appi en Spring Boot
	developmentOnly 'org.springframework.boot:spring-boot-devtools' //Modulo usar las herramentas de desarrollo, depuracion de spring boot
	implementation 'com.fasterxml.jackson.core:jackson-databind'
}

tasks.named('test') {
	useJUnitPlatform()
}
